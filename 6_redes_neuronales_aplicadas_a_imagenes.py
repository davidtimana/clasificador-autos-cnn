# -*- coding: utf-8 -*-
"""6 Redes neuronales aplicadas a imagenes.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Uv8KdkChGibek0Vk6SWvsZhO6khPXpYl

##0 Lectura datos
"""

import tensorflow as tf
from tensorflow.keras.datasets import mnist
(x_train, y_train),(x_test,y_test)=mnist.load_data()

"""##1 Preprocesar los datos"""

from tensorflow.keras.utils import to_categorical

X_train=x_train.reshape(x_train.shape[0],28,28,1).astype('float32')/255
X_test=x_test.reshape(x_test.shape[0],28,28,1).astype('float32')/255
Y_train=tf.keras.utils.to_categorical(y_train,10)
Y_test=tf.keras.utils.to_categorical(y_test,10)

from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Conv2D,MaxPooling2D,Flatten,Dense

modelo=Sequential([
    Conv2D(32,kernel_size=(3,3),activation='relu',input_shape=(28,28,1)),
    MaxPooling2D(pool_size=(2,2)),
    Conv2D(64,kernel_size=(3,3),activation='relu'),
    MaxPooling2D(pool_size=(2,2)),
    Flatten(),
    Dense(128,activation='relu'),
    Dense(10,activation='softmax')
                   ])
modelo.summary()

"""Compilar el modelo y entrenarlo"""

modelo.compile(optimizer='adam',loss='categorical_crossentropy',metrics=['accuracy'])
modelo.fit(X_train,Y_train,validation_data=(X_test,Y_test),epochs=5,batch_size=32)
score=modelo.evaluate(X_test,Y_test,verbose=0)
print('Test loss:',score[0])
print('Test accuracy:',score[1])

n=9999
im=x_test[n,:,:]
import matplotlib.pyplot as plt
plt.imshow(im)
Ypred=modelo.predict(im.reshape(1,28,28,1))
print(Ypred)
print("numero predicho:",Ypred.argmax())