# -*- coding: utf-8 -*-
"""3Tratamiento_de _Imagenes.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1EPLNkbeD9wtN0-deWiq-rNEkKfbjOclu

#**Tratamiento de imagenes**
"""

import cv2 as cv
import numpy as np
from google.colab.patches import cv2_imshow

"""##Creación de imagenes

"""

img = np.zeros((100, 200, 3), dtype=np.uint8)
cv2_imshow(img)

"""creando fondo azul"""

img[:,:,0]=255
cv2_imshow(img)

"""Creando e fondo en rojo"""

img[:,:,0]=0
img[:,:,2]=255
cv2_imshow(img)

"""creando el fondo en verde"""

img[:,:,0]=0
img[:,:,1]=255
img[:,:,2]=0
cv2_imshow(img)

"""Degrade"""

degrade = np.zeros((100, 256, 3), dtype=np.uint8)
for j in range(100):
  for k in range(256):
      degrade[j,k,0]=k
      degrade[j,k,1]=255-k
      degrade[j,k,2]=k

cv2_imshow(degrade)

"""##**Traslación, rotación, escalamiento**"""

import matplotlib.pyplot as plt
ruta='/content/drive/MyDrive/Inteligencia artificial Félix/Visión Por Computador/placa.jfif'
imagen=cv.imread(ruta)
h,w=imagen.shape[:2]
centro = 0,0
angulo=-45
escalado=1
matriz=cv.getRotationMatrix2D(centro,angulo,escalado)
imagen_trasnf=cv.warpAffine(imagen,matriz,(w,h))
plt.subplot(1,2,1)
plt.imshow(imagen)
plt.subplot(1,2,2)
plt.imshow(imagen_trasnf)

#opción 2
total=np.hstack((imagen,imagen_trasnf))
total1=np.hstack((imagen_trasnf,imagen))
cv2_imshow(total)
cv2_imshow(total1)

"""##**Aplicación de filtros con la función Filter2d**"""

import matplotlib.pyplot as plt
ruta='/content/drive/MyDrive/Inteligencia artificial Félix/Visión Por Computador/placa.jfif'
imagen=cv.imread(ruta)
kernel=np.array([[1,1,1],[0,0,0],[-1,-1,-1]])
imagen_filtrada=cv.filter2D(imagen,-1,kernel)
plt.subplot(1,2,1)
plt.imshow(imagen)
plt.subplot(1,2,2)
plt.imshow(imagen_filtrada)

import matplotlib.pyplot as plt
ruta='/content/drive/MyDrive/Inteligencia artificial Félix/Visión Por Computador/placa.jfif'
imagen=cv.imread(ruta)
kernel=np.array([[1,1,1],[0,0,0],[-1,-1,-1]])
imagen_filtrada=cv.filter2D(imagen,-1,kernel)
collage=np.hstack((imagen,imagen_filtrada))
cv2_imshow(collage)

"""###con varios kernel"""

import matplotlib.pyplot as plt
ruta='/content/drive/MyDrive/Inteligencia artificial Félix/Visión Por Computador/placa.jfif'
imagen=cv.imread(ruta)
#kernel1
kernel=np.array([[1,1,1],[0,0,0],[-1,-1,-1]])
imagen_filtrada1=cv.filter2D(imagen,-1,kernel)
#kernel2
kernel=np.array([[-1,-1,-1],[-1,8,-1],[-1,-1,-1]])
imagen_filtrada2=cv.filter2D(imagen,-1,kernel)
#kernel3
kernel=np.array([[1/9,1/9,1/9],[1/9,1/9,1/9],[1/9,1/9,1/9]])
imagen_filtrada3=cv.filter2D(imagen,-1,kernel)
#kernel4
kernel=np.array([[-1,0,-1],[0,4,0],[-1,0,-1]])
imagen_filtrada4=cv.filter2D(imagen,-1,kernel)
collage=np.hstack((imagen,imagen_filtrada1,imagen_filtrada2,imagen_filtrada3,imagen_filtrada4))
cv2_imshow(collage)
cv.GaussianBlur(imagen, (3,3), 0)